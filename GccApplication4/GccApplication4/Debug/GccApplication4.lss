
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fc  00800100  00000bb6  00000c4a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bb6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  008001fc  008001fc  00000d46  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d46  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000da4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e1a  00000000  00000000  00000e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000089d  00000000  00000000  00001c8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005bd  00000000  00000000  0000252b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  00002ae8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000479  00000000  00000000  00002bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004da  00000000  00000000  00003071  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  0000354b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 eb       	ldi	r30, 0xB6	; 182
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 3f       	cpi	r26, 0xFC	; 252
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	ac ef       	ldi	r26, 0xFC	; 252
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 32       	cpi	r26, 0x2E	; 46
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 23 01 	call	0x246	; 0x246 <main>
  9e:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_Init>:
#include <stdio.h>
#include "adc.h"

void ADC_Init(void) {
	// Configurar los pines analógicos como entradas
	DDRC &= ~((1 << DDC0) | (1 << DDC1)); // PC0 y PC1 como entradas
  a6:	87 b1       	in	r24, 0x07	; 7
  a8:	8c 7f       	andi	r24, 0xFC	; 252
  aa:	87 b9       	out	0x07, r24	; 7
	
	// Referencia AVCC con capacitor externo en AREF
	ADMUX = (1 << REFS0);
  ac:	80 e4       	ldi	r24, 0x40	; 64
  ae:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	
	// Habilitar ADC, preescaler 128 (16MHz / 128 = 125kHz)
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
  b2:	87 e8       	ldi	r24, 0x87	; 135
  b4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  b8:	08 95       	ret

000000ba <ADC_Read>:
}

uint16_t ADC_Read(uint8_t channel) {
	// Limpiar bits de selección de canal anteriores
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);
  ba:	ec e7       	ldi	r30, 0x7C	; 124
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	90 81       	ld	r25, Z
  c0:	90 7f       	andi	r25, 0xF0	; 240
  c2:	8f 70       	andi	r24, 0x0F	; 15
  c4:	89 2b       	or	r24, r25
  c6:	80 83       	st	Z, r24
	
	// Iniciar conversión
	ADCSRA |= (1 << ADSC);
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	80 64       	ori	r24, 0x40	; 64
  d0:	80 83       	st	Z, r24
	
	// Esperar a que complete la conversión
	while (ADCSRA & (1 << ADSC));
  d2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  d6:	86 fd       	sbrc	r24, 6
  d8:	fc cf       	rjmp	.-8      	; 0xd2 <ADC_Read+0x18>
	
	// Leer valor
	return ADC;
  da:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  de:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
  e2:	08 95       	ret

000000e4 <convertir_voltaje>:

void convertir_voltaje(uint16_t adc_value, char *buffer) {
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	ec 01       	movw	r28, r24
  ee:	16 2f       	mov	r17, r22
  f0:	07 2f       	mov	r16, r23
	// Debug: Imprimir valor raw del ADC y voltaje calculado
	float voltaje = (adc_value * 5.0) / 1023.0;
  f2:	bc 01       	movw	r22, r24
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__floatunsisf>
  fc:	20 e0       	ldi	r18, 0x00	; 0
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	40 ea       	ldi	r20, 0xA0	; 160
 102:	50 e4       	ldi	r21, 0x40	; 64
 104:	0e 94 82 02 	call	0x504	; 0x504 <__mulsf3>
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 ec       	ldi	r19, 0xC0	; 192
 10c:	4f e7       	ldi	r20, 0x7F	; 127
 10e:	54 e4       	ldi	r21, 0x44	; 68
 110:	0e 94 82 01 	call	0x304	; 0x304 <__divsf3>
	
	// Formatear como cadena con 2 decimales
	sprintf(buffer, "ADC:%u V:%.2f", adc_value, voltaje);
 114:	9f 93       	push	r25
 116:	8f 93       	push	r24
 118:	7f 93       	push	r23
 11a:	6f 93       	push	r22
 11c:	df 93       	push	r29
 11e:	cf 93       	push	r28
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	9f 93       	push	r25
 126:	8f 93       	push	r24
 128:	0f 93       	push	r16
 12a:	1f 93       	push	r17
 12c:	0e 94 ef 02 	call	0x5de	; 0x5de <sprintf>
}
 130:	8d b7       	in	r24, 0x3d	; 61
 132:	9e b7       	in	r25, 0x3e	; 62
 134:	0a 96       	adiw	r24, 0x0a	; 10
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	f8 94       	cli
 13a:	9e bf       	out	0x3e, r25	; 62
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	8d bf       	out	0x3d, r24	; 61
 140:	df 91       	pop	r29
 142:	cf 91       	pop	r28
 144:	1f 91       	pop	r17
 146:	0f 91       	pop	r16
 148:	08 95       	ret

0000014a <USART_Init>:
#include <avr/io.h>
#include "usart.h"

void USART_Init(unsigned int ubrr) {
	// Configuración de baudrate
	UBRR0H = (unsigned char)(ubrr>>8);
 14a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 14e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Habilitar transmisor y receptor
	UCSR0B = (1<<TXEN0)|(1<<RXEN0);
 152:	88 e1       	ldi	r24, 0x18	; 24
 154:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Configurar formato: 8 bits de datos, 1 bit de parada
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 158:	8e e0       	ldi	r24, 0x0E	; 14
 15a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 15e:	08 95       	ret

00000160 <USART_Transmit>:
}

void USART_Transmit(unsigned char data) {
	// Esperar a que el buffer de transmisión esté vacío
	while (!(UCSR0A & (1<<UDRE0)));
 160:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 164:	95 ff       	sbrs	r25, 5
 166:	fc cf       	rjmp	.-8      	; 0x160 <USART_Transmit>
	
	// Colocar dato en buffer de transmisión
	UDR0 = data;
 168:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 16c:	08 95       	ret

0000016e <USART_Receive>:
}

unsigned char USART_Receive(void) {
	// Esperar a recibir un dato
	while (!(UCSR0A & (1<<RXC0)));
 16e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 172:	88 23       	and	r24, r24
 174:	e4 f7       	brge	.-8      	; 0x16e <USART_Receive>
	
	// Devolver dato recibido
	return UDR0;
 176:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 17a:	08 95       	ret

0000017c <USART_SendString>:

void USART_SendString(char *str) {
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	ec 01       	movw	r28, r24
	while (*str != 0x00) {
 182:	03 c0       	rjmp	.+6      	; 0x18a <USART_SendString+0xe>
		USART_Transmit(*str);
 184:	0e 94 b0 00 	call	0x160	; 0x160 <USART_Transmit>
		str++;
 188:	21 96       	adiw	r28, 0x01	; 1
	// Devolver dato recibido
	return UDR0;
}

void USART_SendString(char *str) {
	while (*str != 0x00) {
 18a:	88 81       	ld	r24, Y
 18c:	81 11       	cpse	r24, r1
 18e:	fa cf       	rjmp	.-12     	; 0x184 <USART_SendString+0x8>
		USART_Transmit(*str);
		str++;
	}
}
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	08 95       	ret

00000196 <ConfigureBluetooth>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	2f ef       	ldi	r18, 0xFF	; 255
 198:	81 ee       	ldi	r24, 0xE1	; 225
 19a:	94 e0       	ldi	r25, 0x04	; 4
 19c:	21 50       	subi	r18, 0x01	; 1
 19e:	80 40       	sbci	r24, 0x00	; 0
 1a0:	90 40       	sbci	r25, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <ConfigureBluetooth+0x6>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <ConfigureBluetooth+0x10>
 1a6:	00 00       	nop
// Función de configuración de Bluetooth
void ConfigureBluetooth(void) {
	_delay_ms(100);
	
	// Comandos AT para configuración
	USART_SendString("AT\r\n");
 1a8:	8e e0       	ldi	r24, 0x0E	; 14
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
 1b0:	2f ef       	ldi	r18, 0xFF	; 255
 1b2:	81 ee       	ldi	r24, 0xE1	; 225
 1b4:	94 e0       	ldi	r25, 0x04	; 4
 1b6:	21 50       	subi	r18, 0x01	; 1
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	90 40       	sbci	r25, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <ConfigureBluetooth+0x20>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <ConfigureBluetooth+0x2a>
 1c0:	00 00       	nop
	_delay_ms(100);
	
	USART_SendString("AT+RENEW\r\n");  // Restaurar configuración de fábrica
 1c2:	83 e1       	ldi	r24, 0x13	; 19
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
 1ca:	2f ef       	ldi	r18, 0xFF	; 255
 1cc:	81 ee       	ldi	r24, 0xE1	; 225
 1ce:	94 e0       	ldi	r25, 0x04	; 4
 1d0:	21 50       	subi	r18, 0x01	; 1
 1d2:	80 40       	sbci	r24, 0x00	; 0
 1d4:	90 40       	sbci	r25, 0x00	; 0
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <ConfigureBluetooth+0x3a>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <ConfigureBluetooth+0x44>
 1da:	00 00       	nop
	_delay_ms(100);
	
	USART_SendString("AT+RESET\r\n");  // Reiniciar módulo
 1dc:	8e e1       	ldi	r24, 0x1E	; 30
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
 1e4:	2f ef       	ldi	r18, 0xFF	; 255
 1e6:	81 ee       	ldi	r24, 0xE1	; 225
 1e8:	94 e0       	ldi	r25, 0x04	; 4
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	80 40       	sbci	r24, 0x00	; 0
 1ee:	90 40       	sbci	r25, 0x00	; 0
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <ConfigureBluetooth+0x54>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <ConfigureBluetooth+0x5e>
 1f4:	00 00       	nop
	_delay_ms(100);
	
	USART_SendString("AT+ROLE0\r\n");  // Modo esclavo
 1f6:	89 e2       	ldi	r24, 0x29	; 41
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
 1fe:	2f ef       	ldi	r18, 0xFF	; 255
 200:	81 ee       	ldi	r24, 0xE1	; 225
 202:	94 e0       	ldi	r25, 0x04	; 4
 204:	21 50       	subi	r18, 0x01	; 1
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <ConfigureBluetooth+0x6e>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <ConfigureBluetooth+0x78>
 20e:	00 00       	nop
	_delay_ms(100);
	
	USART_SendString("AT+BAUD0\r\n");  // Baudrate 9600
 210:	84 e3       	ldi	r24, 0x34	; 52
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
 218:	2f ef       	ldi	r18, 0xFF	; 255
 21a:	81 ee       	ldi	r24, 0xE1	; 225
 21c:	94 e0       	ldi	r25, 0x04	; 4
 21e:	21 50       	subi	r18, 0x01	; 1
 220:	80 40       	sbci	r24, 0x00	; 0
 222:	90 40       	sbci	r25, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <ConfigureBluetooth+0x88>
 226:	00 c0       	rjmp	.+0      	; 0x228 <ConfigureBluetooth+0x92>
 228:	00 00       	nop
	_delay_ms(100);
	
	USART_SendString("AT+NAMEProyectoPOTS\r\n");  // Nombre del dispositivo
 22a:	8f e3       	ldi	r24, 0x3F	; 63
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
 232:	2f ef       	ldi	r18, 0xFF	; 255
 234:	81 ee       	ldi	r24, 0xE1	; 225
 236:	94 e0       	ldi	r25, 0x04	; 4
 238:	21 50       	subi	r18, 0x01	; 1
 23a:	80 40       	sbci	r24, 0x00	; 0
 23c:	90 40       	sbci	r25, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <ConfigureBluetooth+0xa2>
 240:	00 c0       	rjmp	.+0      	; 0x242 <ConfigureBluetooth+0xac>
 242:	00 00       	nop
 244:	08 95       	ret

00000246 <main>:
	uint16_t adc_value;
	char rx_char;
	uint8_t current_pot = POT1; // Inicialmente POT1

	// Inicializar módulos
	USART_Init(103);  // Inicialización USART (9600 baudios)
 246:	87 e6       	ldi	r24, 0x67	; 103
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 a5 00 	call	0x14a	; 0x14a <USART_Init>
	ADC_Init();       // Inicialización del ADC
 24e:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_Init>
 252:	2f ef       	ldi	r18, 0xFF	; 255
 254:	89 e6       	ldi	r24, 0x69	; 105
 256:	98 e1       	ldi	r25, 0x18	; 24
 258:	21 50       	subi	r18, 0x01	; 1
 25a:	80 40       	sbci	r24, 0x00	; 0
 25c:	90 40       	sbci	r25, 0x00	; 0
 25e:	e1 f7       	brne	.-8      	; 0x258 <main+0x12>
 260:	00 c0       	rjmp	.+0      	; 0x262 <main+0x1c>
 262:	00 00       	nop
	
	_delay_ms(500);   // Retardo de estabilización

	// Configurar Bluetooth
	ConfigureBluetooth();
 264:	0e 94 cb 00 	call	0x196	; 0x196 <ConfigureBluetooth>

	// Mensaje de bienvenida
	USART_SendString("Sistema de Monitoreo de Potenciómetros\r\n");
 268:	85 e5       	ldi	r24, 0x55	; 85
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
	USART_SendString("Comandos: \r\n");
 270:	8e e7       	ldi	r24, 0x7E	; 126
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
	USART_SendString("'1' - Mostrar voltaje POT1\r\n");
 278:	8b e8       	ldi	r24, 0x8B	; 139
 27a:	91 e0       	ldi	r25, 0x01	; 1
 27c:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
	USART_SendString("'2' - Mostrar voltaje POT2\r\n");
 280:	88 ea       	ldi	r24, 0xA8	; 168
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
void ConfigureBluetooth(void);

int main(void) {
	uint16_t adc_value;
	char rx_char;
	uint8_t current_pot = POT1; // Inicialmente POT1
 288:	c0 e0       	ldi	r28, 0x00	; 0
	USART_SendString("'1' - Mostrar voltaje POT1\r\n");
	USART_SendString("'2' - Mostrar voltaje POT2\r\n");

	while (1) {
		// Verificar si hay un comando recibido
		if (UCSR0A & (1 << RXC0)) {
 28a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 28e:	88 23       	and	r24, r24
 290:	8c f4       	brge	.+34     	; 0x2b4 <main+0x6e>
			rx_char = USART_Receive();
 292:	0e 94 b7 00 	call	0x16e	; 0x16e <USART_Receive>
			
			// Seleccionar potenciómetro
			if (rx_char == '1') {
 296:	81 33       	cpi	r24, 0x31	; 49
 298:	31 f4       	brne	.+12     	; 0x2a6 <main+0x60>
				current_pot = POT1;
				USART_SendString("Seleccionado POT1\r\n");
 29a:	85 ec       	ldi	r24, 0xC5	; 197
 29c:	91 e0       	ldi	r25, 0x01	; 1
 29e:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
		if (UCSR0A & (1 << RXC0)) {
			rx_char = USART_Receive();
			
			// Seleccionar potenciómetro
			if (rx_char == '1') {
				current_pot = POT1;
 2a2:	c0 e0       	ldi	r28, 0x00	; 0
 2a4:	07 c0       	rjmp	.+14     	; 0x2b4 <main+0x6e>
				USART_SendString("Seleccionado POT1\r\n");
			}
			else if (rx_char == '2') {
 2a6:	82 33       	cpi	r24, 0x32	; 50
 2a8:	29 f4       	brne	.+10     	; 0x2b4 <main+0x6e>
				current_pot = POT2;
				USART_SendString("Seleccionado POT2\r\n");
 2aa:	89 ed       	ldi	r24, 0xD9	; 217
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
			if (rx_char == '1') {
				current_pot = POT1;
				USART_SendString("Seleccionado POT1\r\n");
			}
			else if (rx_char == '2') {
				current_pot = POT2;
 2b2:	c1 e0       	ldi	r28, 0x01	; 1
				USART_SendString("Seleccionado POT2\r\n");
			}
		}
		
		// Leer valor del potenciómetro seleccionado
		adc_value = ADC_Read(current_pot);
 2b4:	8c 2f       	mov	r24, r28
 2b6:	0e 94 5d 00 	call	0xba	; 0xba <ADC_Read>
		
		// Convertir valor ADC a voltaje
		convertir_voltaje(adc_value, buffer);
 2ba:	6c ef       	ldi	r22, 0xFC	; 252
 2bc:	71 e0       	ldi	r23, 0x01	; 1
 2be:	0e 94 72 00 	call	0xe4	; 0xe4 <convertir_voltaje>
		
		// Enviar valor de voltaje
		USART_SendString("Voltaje POT");
 2c2:	8d ee       	ldi	r24, 0xED	; 237
 2c4:	91 e0       	ldi	r25, 0x01	; 1
 2c6:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
		USART_Transmit(current_pot == POT1 ? '1' : '2');
 2ca:	c1 11       	cpse	r28, r1
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <main+0x8c>
 2ce:	81 e3       	ldi	r24, 0x31	; 49
 2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <main+0x8e>
 2d2:	82 e3       	ldi	r24, 0x32	; 50
 2d4:	0e 94 b0 00 	call	0x160	; 0x160 <USART_Transmit>
		USART_SendString(": ");
 2d8:	89 ef       	ldi	r24, 0xF9	; 249
 2da:	91 e0       	ldi	r25, 0x01	; 1
 2dc:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
		USART_SendString(buffer);
 2e0:	8c ef       	ldi	r24, 0xFC	; 252
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
		USART_SendString("\r\n");
 2e8:	88 e8       	ldi	r24, 0x88	; 136
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	0e 94 be 00 	call	0x17c	; 0x17c <USART_SendString>
 2f0:	2f ef       	ldi	r18, 0xFF	; 255
 2f2:	83 ed       	ldi	r24, 0xD3	; 211
 2f4:	90 e3       	ldi	r25, 0x30	; 48
 2f6:	21 50       	subi	r18, 0x01	; 1
 2f8:	80 40       	sbci	r24, 0x00	; 0
 2fa:	90 40       	sbci	r25, 0x00	; 0
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0xb0>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0xba>
 300:	00 00       	nop
 302:	c3 cf       	rjmp	.-122    	; 0x28a <main+0x44>

00000304 <__divsf3>:
 304:	0e 94 96 01 	call	0x32c	; 0x32c <__divsf3x>
 308:	0c 94 48 02 	jmp	0x490	; 0x490 <__fp_round>
 30c:	0e 94 41 02 	call	0x482	; 0x482 <__fp_pscB>
 310:	58 f0       	brcs	.+22     	; 0x328 <__divsf3+0x24>
 312:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_pscA>
 316:	40 f0       	brcs	.+16     	; 0x328 <__divsf3+0x24>
 318:	29 f4       	brne	.+10     	; 0x324 <__divsf3+0x20>
 31a:	5f 3f       	cpi	r21, 0xFF	; 255
 31c:	29 f0       	breq	.+10     	; 0x328 <__divsf3+0x24>
 31e:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_inf>
 322:	51 11       	cpse	r21, r1
 324:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_szero>
 328:	0c 94 37 02 	jmp	0x46e	; 0x46e <__fp_nan>

0000032c <__divsf3x>:
 32c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__fp_split3>
 330:	68 f3       	brcs	.-38     	; 0x30c <__divsf3+0x8>

00000332 <__divsf3_pse>:
 332:	99 23       	and	r25, r25
 334:	b1 f3       	breq	.-20     	; 0x322 <__divsf3+0x1e>
 336:	55 23       	and	r21, r21
 338:	91 f3       	breq	.-28     	; 0x31e <__divsf3+0x1a>
 33a:	95 1b       	sub	r25, r21
 33c:	55 0b       	sbc	r21, r21
 33e:	bb 27       	eor	r27, r27
 340:	aa 27       	eor	r26, r26
 342:	62 17       	cp	r22, r18
 344:	73 07       	cpc	r23, r19
 346:	84 07       	cpc	r24, r20
 348:	38 f0       	brcs	.+14     	; 0x358 <__divsf3_pse+0x26>
 34a:	9f 5f       	subi	r25, 0xFF	; 255
 34c:	5f 4f       	sbci	r21, 0xFF	; 255
 34e:	22 0f       	add	r18, r18
 350:	33 1f       	adc	r19, r19
 352:	44 1f       	adc	r20, r20
 354:	aa 1f       	adc	r26, r26
 356:	a9 f3       	breq	.-22     	; 0x342 <__divsf3_pse+0x10>
 358:	35 d0       	rcall	.+106    	; 0x3c4 <__divsf3_pse+0x92>
 35a:	0e 2e       	mov	r0, r30
 35c:	3a f0       	brmi	.+14     	; 0x36c <__divsf3_pse+0x3a>
 35e:	e0 e8       	ldi	r30, 0x80	; 128
 360:	32 d0       	rcall	.+100    	; 0x3c6 <__divsf3_pse+0x94>
 362:	91 50       	subi	r25, 0x01	; 1
 364:	50 40       	sbci	r21, 0x00	; 0
 366:	e6 95       	lsr	r30
 368:	00 1c       	adc	r0, r0
 36a:	ca f7       	brpl	.-14     	; 0x35e <__divsf3_pse+0x2c>
 36c:	2b d0       	rcall	.+86     	; 0x3c4 <__divsf3_pse+0x92>
 36e:	fe 2f       	mov	r31, r30
 370:	29 d0       	rcall	.+82     	; 0x3c4 <__divsf3_pse+0x92>
 372:	66 0f       	add	r22, r22
 374:	77 1f       	adc	r23, r23
 376:	88 1f       	adc	r24, r24
 378:	bb 1f       	adc	r27, r27
 37a:	26 17       	cp	r18, r22
 37c:	37 07       	cpc	r19, r23
 37e:	48 07       	cpc	r20, r24
 380:	ab 07       	cpc	r26, r27
 382:	b0 e8       	ldi	r27, 0x80	; 128
 384:	09 f0       	breq	.+2      	; 0x388 <__divsf3_pse+0x56>
 386:	bb 0b       	sbc	r27, r27
 388:	80 2d       	mov	r24, r0
 38a:	bf 01       	movw	r22, r30
 38c:	ff 27       	eor	r31, r31
 38e:	93 58       	subi	r25, 0x83	; 131
 390:	5f 4f       	sbci	r21, 0xFF	; 255
 392:	3a f0       	brmi	.+14     	; 0x3a2 <__divsf3_pse+0x70>
 394:	9e 3f       	cpi	r25, 0xFE	; 254
 396:	51 05       	cpc	r21, r1
 398:	78 f0       	brcs	.+30     	; 0x3b8 <__divsf3_pse+0x86>
 39a:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_inf>
 39e:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_szero>
 3a2:	5f 3f       	cpi	r21, 0xFF	; 255
 3a4:	e4 f3       	brlt	.-8      	; 0x39e <__divsf3_pse+0x6c>
 3a6:	98 3e       	cpi	r25, 0xE8	; 232
 3a8:	d4 f3       	brlt	.-12     	; 0x39e <__divsf3_pse+0x6c>
 3aa:	86 95       	lsr	r24
 3ac:	77 95       	ror	r23
 3ae:	67 95       	ror	r22
 3b0:	b7 95       	ror	r27
 3b2:	f7 95       	ror	r31
 3b4:	9f 5f       	subi	r25, 0xFF	; 255
 3b6:	c9 f7       	brne	.-14     	; 0x3aa <__divsf3_pse+0x78>
 3b8:	88 0f       	add	r24, r24
 3ba:	91 1d       	adc	r25, r1
 3bc:	96 95       	lsr	r25
 3be:	87 95       	ror	r24
 3c0:	97 f9       	bld	r25, 7
 3c2:	08 95       	ret
 3c4:	e1 e0       	ldi	r30, 0x01	; 1
 3c6:	66 0f       	add	r22, r22
 3c8:	77 1f       	adc	r23, r23
 3ca:	88 1f       	adc	r24, r24
 3cc:	bb 1f       	adc	r27, r27
 3ce:	62 17       	cp	r22, r18
 3d0:	73 07       	cpc	r23, r19
 3d2:	84 07       	cpc	r24, r20
 3d4:	ba 07       	cpc	r27, r26
 3d6:	20 f0       	brcs	.+8      	; 0x3e0 <__divsf3_pse+0xae>
 3d8:	62 1b       	sub	r22, r18
 3da:	73 0b       	sbc	r23, r19
 3dc:	84 0b       	sbc	r24, r20
 3de:	ba 0b       	sbc	r27, r26
 3e0:	ee 1f       	adc	r30, r30
 3e2:	88 f7       	brcc	.-30     	; 0x3c6 <__divsf3_pse+0x94>
 3e4:	e0 95       	com	r30
 3e6:	08 95       	ret

000003e8 <__floatunsisf>:
 3e8:	e8 94       	clt
 3ea:	09 c0       	rjmp	.+18     	; 0x3fe <__floatsisf+0x12>

000003ec <__floatsisf>:
 3ec:	97 fb       	bst	r25, 7
 3ee:	3e f4       	brtc	.+14     	; 0x3fe <__floatsisf+0x12>
 3f0:	90 95       	com	r25
 3f2:	80 95       	com	r24
 3f4:	70 95       	com	r23
 3f6:	61 95       	neg	r22
 3f8:	7f 4f       	sbci	r23, 0xFF	; 255
 3fa:	8f 4f       	sbci	r24, 0xFF	; 255
 3fc:	9f 4f       	sbci	r25, 0xFF	; 255
 3fe:	99 23       	and	r25, r25
 400:	a9 f0       	breq	.+42     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 402:	f9 2f       	mov	r31, r25
 404:	96 e9       	ldi	r25, 0x96	; 150
 406:	bb 27       	eor	r27, r27
 408:	93 95       	inc	r25
 40a:	f6 95       	lsr	r31
 40c:	87 95       	ror	r24
 40e:	77 95       	ror	r23
 410:	67 95       	ror	r22
 412:	b7 95       	ror	r27
 414:	f1 11       	cpse	r31, r1
 416:	f8 cf       	rjmp	.-16     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 418:	fa f4       	brpl	.+62     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 41a:	bb 0f       	add	r27, r27
 41c:	11 f4       	brne	.+4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 41e:	60 ff       	sbrs	r22, 0
 420:	1b c0       	rjmp	.+54     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 422:	6f 5f       	subi	r22, 0xFF	; 255
 424:	7f 4f       	sbci	r23, 0xFF	; 255
 426:	8f 4f       	sbci	r24, 0xFF	; 255
 428:	9f 4f       	sbci	r25, 0xFF	; 255
 42a:	16 c0       	rjmp	.+44     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 42c:	88 23       	and	r24, r24
 42e:	11 f0       	breq	.+4      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 430:	96 e9       	ldi	r25, 0x96	; 150
 432:	11 c0       	rjmp	.+34     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 434:	77 23       	and	r23, r23
 436:	21 f0       	breq	.+8      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 438:	9e e8       	ldi	r25, 0x8E	; 142
 43a:	87 2f       	mov	r24, r23
 43c:	76 2f       	mov	r23, r22
 43e:	05 c0       	rjmp	.+10     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 440:	66 23       	and	r22, r22
 442:	71 f0       	breq	.+28     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 444:	96 e8       	ldi	r25, 0x86	; 134
 446:	86 2f       	mov	r24, r22
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	2a f0       	brmi	.+10     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 44e:	9a 95       	dec	r25
 450:	66 0f       	add	r22, r22
 452:	77 1f       	adc	r23, r23
 454:	88 1f       	adc	r24, r24
 456:	da f7       	brpl	.-10     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 458:	88 0f       	add	r24, r24
 45a:	96 95       	lsr	r25
 45c:	87 95       	ror	r24
 45e:	97 f9       	bld	r25, 7
 460:	08 95       	ret

00000462 <__fp_inf>:
 462:	97 f9       	bld	r25, 7
 464:	9f 67       	ori	r25, 0x7F	; 127
 466:	80 e8       	ldi	r24, 0x80	; 128
 468:	70 e0       	ldi	r23, 0x00	; 0
 46a:	60 e0       	ldi	r22, 0x00	; 0
 46c:	08 95       	ret

0000046e <__fp_nan>:
 46e:	9f ef       	ldi	r25, 0xFF	; 255
 470:	80 ec       	ldi	r24, 0xC0	; 192
 472:	08 95       	ret

00000474 <__fp_pscA>:
 474:	00 24       	eor	r0, r0
 476:	0a 94       	dec	r0
 478:	16 16       	cp	r1, r22
 47a:	17 06       	cpc	r1, r23
 47c:	18 06       	cpc	r1, r24
 47e:	09 06       	cpc	r0, r25
 480:	08 95       	ret

00000482 <__fp_pscB>:
 482:	00 24       	eor	r0, r0
 484:	0a 94       	dec	r0
 486:	12 16       	cp	r1, r18
 488:	13 06       	cpc	r1, r19
 48a:	14 06       	cpc	r1, r20
 48c:	05 06       	cpc	r0, r21
 48e:	08 95       	ret

00000490 <__fp_round>:
 490:	09 2e       	mov	r0, r25
 492:	03 94       	inc	r0
 494:	00 0c       	add	r0, r0
 496:	11 f4       	brne	.+4      	; 0x49c <__fp_round+0xc>
 498:	88 23       	and	r24, r24
 49a:	52 f0       	brmi	.+20     	; 0x4b0 <__fp_round+0x20>
 49c:	bb 0f       	add	r27, r27
 49e:	40 f4       	brcc	.+16     	; 0x4b0 <__fp_round+0x20>
 4a0:	bf 2b       	or	r27, r31
 4a2:	11 f4       	brne	.+4      	; 0x4a8 <__fp_round+0x18>
 4a4:	60 ff       	sbrs	r22, 0
 4a6:	04 c0       	rjmp	.+8      	; 0x4b0 <__fp_round+0x20>
 4a8:	6f 5f       	subi	r22, 0xFF	; 255
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	08 95       	ret

000004b2 <__fp_split3>:
 4b2:	57 fd       	sbrc	r21, 7
 4b4:	90 58       	subi	r25, 0x80	; 128
 4b6:	44 0f       	add	r20, r20
 4b8:	55 1f       	adc	r21, r21
 4ba:	59 f0       	breq	.+22     	; 0x4d2 <__fp_splitA+0x10>
 4bc:	5f 3f       	cpi	r21, 0xFF	; 255
 4be:	71 f0       	breq	.+28     	; 0x4dc <__fp_splitA+0x1a>
 4c0:	47 95       	ror	r20

000004c2 <__fp_splitA>:
 4c2:	88 0f       	add	r24, r24
 4c4:	97 fb       	bst	r25, 7
 4c6:	99 1f       	adc	r25, r25
 4c8:	61 f0       	breq	.+24     	; 0x4e2 <__fp_splitA+0x20>
 4ca:	9f 3f       	cpi	r25, 0xFF	; 255
 4cc:	79 f0       	breq	.+30     	; 0x4ec <__fp_splitA+0x2a>
 4ce:	87 95       	ror	r24
 4d0:	08 95       	ret
 4d2:	12 16       	cp	r1, r18
 4d4:	13 06       	cpc	r1, r19
 4d6:	14 06       	cpc	r1, r20
 4d8:	55 1f       	adc	r21, r21
 4da:	f2 cf       	rjmp	.-28     	; 0x4c0 <__fp_split3+0xe>
 4dc:	46 95       	lsr	r20
 4de:	f1 df       	rcall	.-30     	; 0x4c2 <__fp_splitA>
 4e0:	08 c0       	rjmp	.+16     	; 0x4f2 <__fp_splitA+0x30>
 4e2:	16 16       	cp	r1, r22
 4e4:	17 06       	cpc	r1, r23
 4e6:	18 06       	cpc	r1, r24
 4e8:	99 1f       	adc	r25, r25
 4ea:	f1 cf       	rjmp	.-30     	; 0x4ce <__fp_splitA+0xc>
 4ec:	86 95       	lsr	r24
 4ee:	71 05       	cpc	r23, r1
 4f0:	61 05       	cpc	r22, r1
 4f2:	08 94       	sec
 4f4:	08 95       	ret

000004f6 <__fp_zero>:
 4f6:	e8 94       	clt

000004f8 <__fp_szero>:
 4f8:	bb 27       	eor	r27, r27
 4fa:	66 27       	eor	r22, r22
 4fc:	77 27       	eor	r23, r23
 4fe:	cb 01       	movw	r24, r22
 500:	97 f9       	bld	r25, 7
 502:	08 95       	ret

00000504 <__mulsf3>:
 504:	0e 94 95 02 	call	0x52a	; 0x52a <__mulsf3x>
 508:	0c 94 48 02 	jmp	0x490	; 0x490 <__fp_round>
 50c:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_pscA>
 510:	38 f0       	brcs	.+14     	; 0x520 <__mulsf3+0x1c>
 512:	0e 94 41 02 	call	0x482	; 0x482 <__fp_pscB>
 516:	20 f0       	brcs	.+8      	; 0x520 <__mulsf3+0x1c>
 518:	95 23       	and	r25, r21
 51a:	11 f0       	breq	.+4      	; 0x520 <__mulsf3+0x1c>
 51c:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_inf>
 520:	0c 94 37 02 	jmp	0x46e	; 0x46e <__fp_nan>
 524:	11 24       	eor	r1, r1
 526:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_szero>

0000052a <__mulsf3x>:
 52a:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__fp_split3>
 52e:	70 f3       	brcs	.-36     	; 0x50c <__mulsf3+0x8>

00000530 <__mulsf3_pse>:
 530:	95 9f       	mul	r25, r21
 532:	c1 f3       	breq	.-16     	; 0x524 <__mulsf3+0x20>
 534:	95 0f       	add	r25, r21
 536:	50 e0       	ldi	r21, 0x00	; 0
 538:	55 1f       	adc	r21, r21
 53a:	62 9f       	mul	r22, r18
 53c:	f0 01       	movw	r30, r0
 53e:	72 9f       	mul	r23, r18
 540:	bb 27       	eor	r27, r27
 542:	f0 0d       	add	r31, r0
 544:	b1 1d       	adc	r27, r1
 546:	63 9f       	mul	r22, r19
 548:	aa 27       	eor	r26, r26
 54a:	f0 0d       	add	r31, r0
 54c:	b1 1d       	adc	r27, r1
 54e:	aa 1f       	adc	r26, r26
 550:	64 9f       	mul	r22, r20
 552:	66 27       	eor	r22, r22
 554:	b0 0d       	add	r27, r0
 556:	a1 1d       	adc	r26, r1
 558:	66 1f       	adc	r22, r22
 55a:	82 9f       	mul	r24, r18
 55c:	22 27       	eor	r18, r18
 55e:	b0 0d       	add	r27, r0
 560:	a1 1d       	adc	r26, r1
 562:	62 1f       	adc	r22, r18
 564:	73 9f       	mul	r23, r19
 566:	b0 0d       	add	r27, r0
 568:	a1 1d       	adc	r26, r1
 56a:	62 1f       	adc	r22, r18
 56c:	83 9f       	mul	r24, r19
 56e:	a0 0d       	add	r26, r0
 570:	61 1d       	adc	r22, r1
 572:	22 1f       	adc	r18, r18
 574:	74 9f       	mul	r23, r20
 576:	33 27       	eor	r19, r19
 578:	a0 0d       	add	r26, r0
 57a:	61 1d       	adc	r22, r1
 57c:	23 1f       	adc	r18, r19
 57e:	84 9f       	mul	r24, r20
 580:	60 0d       	add	r22, r0
 582:	21 1d       	adc	r18, r1
 584:	82 2f       	mov	r24, r18
 586:	76 2f       	mov	r23, r22
 588:	6a 2f       	mov	r22, r26
 58a:	11 24       	eor	r1, r1
 58c:	9f 57       	subi	r25, 0x7F	; 127
 58e:	50 40       	sbci	r21, 0x00	; 0
 590:	9a f0       	brmi	.+38     	; 0x5b8 <__mulsf3_pse+0x88>
 592:	f1 f0       	breq	.+60     	; 0x5d0 <__mulsf3_pse+0xa0>
 594:	88 23       	and	r24, r24
 596:	4a f0       	brmi	.+18     	; 0x5aa <__mulsf3_pse+0x7a>
 598:	ee 0f       	add	r30, r30
 59a:	ff 1f       	adc	r31, r31
 59c:	bb 1f       	adc	r27, r27
 59e:	66 1f       	adc	r22, r22
 5a0:	77 1f       	adc	r23, r23
 5a2:	88 1f       	adc	r24, r24
 5a4:	91 50       	subi	r25, 0x01	; 1
 5a6:	50 40       	sbci	r21, 0x00	; 0
 5a8:	a9 f7       	brne	.-22     	; 0x594 <__mulsf3_pse+0x64>
 5aa:	9e 3f       	cpi	r25, 0xFE	; 254
 5ac:	51 05       	cpc	r21, r1
 5ae:	80 f0       	brcs	.+32     	; 0x5d0 <__mulsf3_pse+0xa0>
 5b0:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_inf>
 5b4:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_szero>
 5b8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ba:	e4 f3       	brlt	.-8      	; 0x5b4 <__mulsf3_pse+0x84>
 5bc:	98 3e       	cpi	r25, 0xE8	; 232
 5be:	d4 f3       	brlt	.-12     	; 0x5b4 <__mulsf3_pse+0x84>
 5c0:	86 95       	lsr	r24
 5c2:	77 95       	ror	r23
 5c4:	67 95       	ror	r22
 5c6:	b7 95       	ror	r27
 5c8:	f7 95       	ror	r31
 5ca:	e7 95       	ror	r30
 5cc:	9f 5f       	subi	r25, 0xFF	; 255
 5ce:	c1 f7       	brne	.-16     	; 0x5c0 <__mulsf3_pse+0x90>
 5d0:	fe 2b       	or	r31, r30
 5d2:	88 0f       	add	r24, r24
 5d4:	91 1d       	adc	r25, r1
 5d6:	96 95       	lsr	r25
 5d8:	87 95       	ror	r24
 5da:	97 f9       	bld	r25, 7
 5dc:	08 95       	ret

000005de <sprintf>:
 5de:	ae e0       	ldi	r26, 0x0E	; 14
 5e0:	b0 e0       	ldi	r27, 0x00	; 0
 5e2:	e5 ef       	ldi	r30, 0xF5	; 245
 5e4:	f2 e0       	ldi	r31, 0x02	; 2
 5e6:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__prologue_saves__+0x1c>
 5ea:	0d 89       	ldd	r16, Y+21	; 0x15
 5ec:	1e 89       	ldd	r17, Y+22	; 0x16
 5ee:	86 e0       	ldi	r24, 0x06	; 6
 5f0:	8c 83       	std	Y+4, r24	; 0x04
 5f2:	1a 83       	std	Y+2, r17	; 0x02
 5f4:	09 83       	std	Y+1, r16	; 0x01
 5f6:	8f ef       	ldi	r24, 0xFF	; 255
 5f8:	9f e7       	ldi	r25, 0x7F	; 127
 5fa:	9e 83       	std	Y+6, r25	; 0x06
 5fc:	8d 83       	std	Y+5, r24	; 0x05
 5fe:	ae 01       	movw	r20, r28
 600:	47 5e       	subi	r20, 0xE7	; 231
 602:	5f 4f       	sbci	r21, 0xFF	; 255
 604:	6f 89       	ldd	r22, Y+23	; 0x17
 606:	78 8d       	ldd	r23, Y+24	; 0x18
 608:	ce 01       	movw	r24, r28
 60a:	01 96       	adiw	r24, 0x01	; 1
 60c:	0e 94 11 03 	call	0x622	; 0x622 <vfprintf>
 610:	ef 81       	ldd	r30, Y+7	; 0x07
 612:	f8 85       	ldd	r31, Y+8	; 0x08
 614:	e0 0f       	add	r30, r16
 616:	f1 1f       	adc	r31, r17
 618:	10 82       	st	Z, r1
 61a:	2e 96       	adiw	r28, 0x0e	; 14
 61c:	e4 e0       	ldi	r30, 0x04	; 4
 61e:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <__epilogue_restores__+0x1c>

00000622 <vfprintf>:
 622:	ab e0       	ldi	r26, 0x0B	; 11
 624:	b0 e0       	ldi	r27, 0x00	; 0
 626:	e7 e1       	ldi	r30, 0x17	; 23
 628:	f3 e0       	ldi	r31, 0x03	; 3
 62a:	0c 94 a2 05 	jmp	0xb44	; 0xb44 <__prologue_saves__>
 62e:	6c 01       	movw	r12, r24
 630:	7b 01       	movw	r14, r22
 632:	8a 01       	movw	r16, r20
 634:	fc 01       	movw	r30, r24
 636:	17 82       	std	Z+7, r1	; 0x07
 638:	16 82       	std	Z+6, r1	; 0x06
 63a:	83 81       	ldd	r24, Z+3	; 0x03
 63c:	81 ff       	sbrs	r24, 1
 63e:	cc c1       	rjmp	.+920    	; 0x9d8 <__stack+0xd9>
 640:	ce 01       	movw	r24, r28
 642:	01 96       	adiw	r24, 0x01	; 1
 644:	3c 01       	movw	r6, r24
 646:	f6 01       	movw	r30, r12
 648:	93 81       	ldd	r25, Z+3	; 0x03
 64a:	f7 01       	movw	r30, r14
 64c:	93 fd       	sbrc	r25, 3
 64e:	85 91       	lpm	r24, Z+
 650:	93 ff       	sbrs	r25, 3
 652:	81 91       	ld	r24, Z+
 654:	7f 01       	movw	r14, r30
 656:	88 23       	and	r24, r24
 658:	09 f4       	brne	.+2      	; 0x65c <vfprintf+0x3a>
 65a:	ba c1       	rjmp	.+884    	; 0x9d0 <__stack+0xd1>
 65c:	85 32       	cpi	r24, 0x25	; 37
 65e:	39 f4       	brne	.+14     	; 0x66e <vfprintf+0x4c>
 660:	93 fd       	sbrc	r25, 3
 662:	85 91       	lpm	r24, Z+
 664:	93 ff       	sbrs	r25, 3
 666:	81 91       	ld	r24, Z+
 668:	7f 01       	movw	r14, r30
 66a:	85 32       	cpi	r24, 0x25	; 37
 66c:	29 f4       	brne	.+10     	; 0x678 <vfprintf+0x56>
 66e:	b6 01       	movw	r22, r12
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 676:	e7 cf       	rjmp	.-50     	; 0x646 <vfprintf+0x24>
 678:	91 2c       	mov	r9, r1
 67a:	21 2c       	mov	r2, r1
 67c:	31 2c       	mov	r3, r1
 67e:	ff e1       	ldi	r31, 0x1F	; 31
 680:	f3 15       	cp	r31, r3
 682:	d8 f0       	brcs	.+54     	; 0x6ba <vfprintf+0x98>
 684:	8b 32       	cpi	r24, 0x2B	; 43
 686:	79 f0       	breq	.+30     	; 0x6a6 <vfprintf+0x84>
 688:	38 f4       	brcc	.+14     	; 0x698 <vfprintf+0x76>
 68a:	80 32       	cpi	r24, 0x20	; 32
 68c:	79 f0       	breq	.+30     	; 0x6ac <vfprintf+0x8a>
 68e:	83 32       	cpi	r24, 0x23	; 35
 690:	a1 f4       	brne	.+40     	; 0x6ba <vfprintf+0x98>
 692:	23 2d       	mov	r18, r3
 694:	20 61       	ori	r18, 0x10	; 16
 696:	1d c0       	rjmp	.+58     	; 0x6d2 <vfprintf+0xb0>
 698:	8d 32       	cpi	r24, 0x2D	; 45
 69a:	61 f0       	breq	.+24     	; 0x6b4 <vfprintf+0x92>
 69c:	80 33       	cpi	r24, 0x30	; 48
 69e:	69 f4       	brne	.+26     	; 0x6ba <vfprintf+0x98>
 6a0:	23 2d       	mov	r18, r3
 6a2:	21 60       	ori	r18, 0x01	; 1
 6a4:	16 c0       	rjmp	.+44     	; 0x6d2 <vfprintf+0xb0>
 6a6:	83 2d       	mov	r24, r3
 6a8:	82 60       	ori	r24, 0x02	; 2
 6aa:	38 2e       	mov	r3, r24
 6ac:	e3 2d       	mov	r30, r3
 6ae:	e4 60       	ori	r30, 0x04	; 4
 6b0:	3e 2e       	mov	r3, r30
 6b2:	2a c0       	rjmp	.+84     	; 0x708 <vfprintf+0xe6>
 6b4:	f3 2d       	mov	r31, r3
 6b6:	f8 60       	ori	r31, 0x08	; 8
 6b8:	1d c0       	rjmp	.+58     	; 0x6f4 <vfprintf+0xd2>
 6ba:	37 fc       	sbrc	r3, 7
 6bc:	2d c0       	rjmp	.+90     	; 0x718 <vfprintf+0xf6>
 6be:	20 ed       	ldi	r18, 0xD0	; 208
 6c0:	28 0f       	add	r18, r24
 6c2:	2a 30       	cpi	r18, 0x0A	; 10
 6c4:	40 f0       	brcs	.+16     	; 0x6d6 <vfprintf+0xb4>
 6c6:	8e 32       	cpi	r24, 0x2E	; 46
 6c8:	b9 f4       	brne	.+46     	; 0x6f8 <vfprintf+0xd6>
 6ca:	36 fc       	sbrc	r3, 6
 6cc:	81 c1       	rjmp	.+770    	; 0x9d0 <__stack+0xd1>
 6ce:	23 2d       	mov	r18, r3
 6d0:	20 64       	ori	r18, 0x40	; 64
 6d2:	32 2e       	mov	r3, r18
 6d4:	19 c0       	rjmp	.+50     	; 0x708 <vfprintf+0xe6>
 6d6:	36 fe       	sbrs	r3, 6
 6d8:	06 c0       	rjmp	.+12     	; 0x6e6 <vfprintf+0xc4>
 6da:	8a e0       	ldi	r24, 0x0A	; 10
 6dc:	98 9e       	mul	r9, r24
 6de:	20 0d       	add	r18, r0
 6e0:	11 24       	eor	r1, r1
 6e2:	92 2e       	mov	r9, r18
 6e4:	11 c0       	rjmp	.+34     	; 0x708 <vfprintf+0xe6>
 6e6:	ea e0       	ldi	r30, 0x0A	; 10
 6e8:	2e 9e       	mul	r2, r30
 6ea:	20 0d       	add	r18, r0
 6ec:	11 24       	eor	r1, r1
 6ee:	22 2e       	mov	r2, r18
 6f0:	f3 2d       	mov	r31, r3
 6f2:	f0 62       	ori	r31, 0x20	; 32
 6f4:	3f 2e       	mov	r3, r31
 6f6:	08 c0       	rjmp	.+16     	; 0x708 <vfprintf+0xe6>
 6f8:	8c 36       	cpi	r24, 0x6C	; 108
 6fa:	21 f4       	brne	.+8      	; 0x704 <vfprintf+0xe2>
 6fc:	83 2d       	mov	r24, r3
 6fe:	80 68       	ori	r24, 0x80	; 128
 700:	38 2e       	mov	r3, r24
 702:	02 c0       	rjmp	.+4      	; 0x708 <vfprintf+0xe6>
 704:	88 36       	cpi	r24, 0x68	; 104
 706:	41 f4       	brne	.+16     	; 0x718 <vfprintf+0xf6>
 708:	f7 01       	movw	r30, r14
 70a:	93 fd       	sbrc	r25, 3
 70c:	85 91       	lpm	r24, Z+
 70e:	93 ff       	sbrs	r25, 3
 710:	81 91       	ld	r24, Z+
 712:	7f 01       	movw	r14, r30
 714:	81 11       	cpse	r24, r1
 716:	b3 cf       	rjmp	.-154    	; 0x67e <vfprintf+0x5c>
 718:	98 2f       	mov	r25, r24
 71a:	9f 7d       	andi	r25, 0xDF	; 223
 71c:	95 54       	subi	r25, 0x45	; 69
 71e:	93 30       	cpi	r25, 0x03	; 3
 720:	28 f4       	brcc	.+10     	; 0x72c <vfprintf+0x10a>
 722:	0c 5f       	subi	r16, 0xFC	; 252
 724:	1f 4f       	sbci	r17, 0xFF	; 255
 726:	9f e3       	ldi	r25, 0x3F	; 63
 728:	99 83       	std	Y+1, r25	; 0x01
 72a:	0d c0       	rjmp	.+26     	; 0x746 <vfprintf+0x124>
 72c:	83 36       	cpi	r24, 0x63	; 99
 72e:	31 f0       	breq	.+12     	; 0x73c <vfprintf+0x11a>
 730:	83 37       	cpi	r24, 0x73	; 115
 732:	71 f0       	breq	.+28     	; 0x750 <vfprintf+0x12e>
 734:	83 35       	cpi	r24, 0x53	; 83
 736:	09 f0       	breq	.+2      	; 0x73a <vfprintf+0x118>
 738:	59 c0       	rjmp	.+178    	; 0x7ec <vfprintf+0x1ca>
 73a:	21 c0       	rjmp	.+66     	; 0x77e <vfprintf+0x15c>
 73c:	f8 01       	movw	r30, r16
 73e:	80 81       	ld	r24, Z
 740:	89 83       	std	Y+1, r24	; 0x01
 742:	0e 5f       	subi	r16, 0xFE	; 254
 744:	1f 4f       	sbci	r17, 0xFF	; 255
 746:	88 24       	eor	r8, r8
 748:	83 94       	inc	r8
 74a:	91 2c       	mov	r9, r1
 74c:	53 01       	movw	r10, r6
 74e:	13 c0       	rjmp	.+38     	; 0x776 <vfprintf+0x154>
 750:	28 01       	movw	r4, r16
 752:	f2 e0       	ldi	r31, 0x02	; 2
 754:	4f 0e       	add	r4, r31
 756:	51 1c       	adc	r5, r1
 758:	f8 01       	movw	r30, r16
 75a:	a0 80       	ld	r10, Z
 75c:	b1 80       	ldd	r11, Z+1	; 0x01
 75e:	36 fe       	sbrs	r3, 6
 760:	03 c0       	rjmp	.+6      	; 0x768 <vfprintf+0x146>
 762:	69 2d       	mov	r22, r9
 764:	70 e0       	ldi	r23, 0x00	; 0
 766:	02 c0       	rjmp	.+4      	; 0x76c <vfprintf+0x14a>
 768:	6f ef       	ldi	r22, 0xFF	; 255
 76a:	7f ef       	ldi	r23, 0xFF	; 255
 76c:	c5 01       	movw	r24, r10
 76e:	0e 94 fd 04 	call	0x9fa	; 0x9fa <strnlen>
 772:	4c 01       	movw	r8, r24
 774:	82 01       	movw	r16, r4
 776:	f3 2d       	mov	r31, r3
 778:	ff 77       	andi	r31, 0x7F	; 127
 77a:	3f 2e       	mov	r3, r31
 77c:	16 c0       	rjmp	.+44     	; 0x7aa <vfprintf+0x188>
 77e:	28 01       	movw	r4, r16
 780:	22 e0       	ldi	r18, 0x02	; 2
 782:	42 0e       	add	r4, r18
 784:	51 1c       	adc	r5, r1
 786:	f8 01       	movw	r30, r16
 788:	a0 80       	ld	r10, Z
 78a:	b1 80       	ldd	r11, Z+1	; 0x01
 78c:	36 fe       	sbrs	r3, 6
 78e:	03 c0       	rjmp	.+6      	; 0x796 <vfprintf+0x174>
 790:	69 2d       	mov	r22, r9
 792:	70 e0       	ldi	r23, 0x00	; 0
 794:	02 c0       	rjmp	.+4      	; 0x79a <vfprintf+0x178>
 796:	6f ef       	ldi	r22, 0xFF	; 255
 798:	7f ef       	ldi	r23, 0xFF	; 255
 79a:	c5 01       	movw	r24, r10
 79c:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <strnlen_P>
 7a0:	4c 01       	movw	r8, r24
 7a2:	f3 2d       	mov	r31, r3
 7a4:	f0 68       	ori	r31, 0x80	; 128
 7a6:	3f 2e       	mov	r3, r31
 7a8:	82 01       	movw	r16, r4
 7aa:	33 fc       	sbrc	r3, 3
 7ac:	1b c0       	rjmp	.+54     	; 0x7e4 <vfprintf+0x1c2>
 7ae:	82 2d       	mov	r24, r2
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	88 16       	cp	r8, r24
 7b4:	99 06       	cpc	r9, r25
 7b6:	b0 f4       	brcc	.+44     	; 0x7e4 <vfprintf+0x1c2>
 7b8:	b6 01       	movw	r22, r12
 7ba:	80 e2       	ldi	r24, 0x20	; 32
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 7c2:	2a 94       	dec	r2
 7c4:	f4 cf       	rjmp	.-24     	; 0x7ae <vfprintf+0x18c>
 7c6:	f5 01       	movw	r30, r10
 7c8:	37 fc       	sbrc	r3, 7
 7ca:	85 91       	lpm	r24, Z+
 7cc:	37 fe       	sbrs	r3, 7
 7ce:	81 91       	ld	r24, Z+
 7d0:	5f 01       	movw	r10, r30
 7d2:	b6 01       	movw	r22, r12
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 7da:	21 10       	cpse	r2, r1
 7dc:	2a 94       	dec	r2
 7de:	21 e0       	ldi	r18, 0x01	; 1
 7e0:	82 1a       	sub	r8, r18
 7e2:	91 08       	sbc	r9, r1
 7e4:	81 14       	cp	r8, r1
 7e6:	91 04       	cpc	r9, r1
 7e8:	71 f7       	brne	.-36     	; 0x7c6 <vfprintf+0x1a4>
 7ea:	e8 c0       	rjmp	.+464    	; 0x9bc <__stack+0xbd>
 7ec:	84 36       	cpi	r24, 0x64	; 100
 7ee:	11 f0       	breq	.+4      	; 0x7f4 <vfprintf+0x1d2>
 7f0:	89 36       	cpi	r24, 0x69	; 105
 7f2:	41 f5       	brne	.+80     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 7f4:	f8 01       	movw	r30, r16
 7f6:	37 fe       	sbrs	r3, 7
 7f8:	07 c0       	rjmp	.+14     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7fa:	60 81       	ld	r22, Z
 7fc:	71 81       	ldd	r23, Z+1	; 0x01
 7fe:	82 81       	ldd	r24, Z+2	; 0x02
 800:	93 81       	ldd	r25, Z+3	; 0x03
 802:	0c 5f       	subi	r16, 0xFC	; 252
 804:	1f 4f       	sbci	r17, 0xFF	; 255
 806:	08 c0       	rjmp	.+16     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 808:	60 81       	ld	r22, Z
 80a:	71 81       	ldd	r23, Z+1	; 0x01
 80c:	07 2e       	mov	r0, r23
 80e:	00 0c       	add	r0, r0
 810:	88 0b       	sbc	r24, r24
 812:	99 0b       	sbc	r25, r25
 814:	0e 5f       	subi	r16, 0xFE	; 254
 816:	1f 4f       	sbci	r17, 0xFF	; 255
 818:	f3 2d       	mov	r31, r3
 81a:	ff 76       	andi	r31, 0x6F	; 111
 81c:	3f 2e       	mov	r3, r31
 81e:	97 ff       	sbrs	r25, 7
 820:	09 c0       	rjmp	.+18     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 822:	90 95       	com	r25
 824:	80 95       	com	r24
 826:	70 95       	com	r23
 828:	61 95       	neg	r22
 82a:	7f 4f       	sbci	r23, 0xFF	; 255
 82c:	8f 4f       	sbci	r24, 0xFF	; 255
 82e:	9f 4f       	sbci	r25, 0xFF	; 255
 830:	f0 68       	ori	r31, 0x80	; 128
 832:	3f 2e       	mov	r3, r31
 834:	2a e0       	ldi	r18, 0x0A	; 10
 836:	30 e0       	ldi	r19, 0x00	; 0
 838:	a3 01       	movw	r20, r6
 83a:	0e 94 44 05 	call	0xa88	; 0xa88 <__ultoa_invert>
 83e:	88 2e       	mov	r8, r24
 840:	86 18       	sub	r8, r6
 842:	45 c0       	rjmp	.+138    	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 844:	85 37       	cpi	r24, 0x75	; 117
 846:	31 f4       	brne	.+12     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 848:	23 2d       	mov	r18, r3
 84a:	2f 7e       	andi	r18, 0xEF	; 239
 84c:	b2 2e       	mov	r11, r18
 84e:	2a e0       	ldi	r18, 0x0A	; 10
 850:	30 e0       	ldi	r19, 0x00	; 0
 852:	25 c0       	rjmp	.+74     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 854:	93 2d       	mov	r25, r3
 856:	99 7f       	andi	r25, 0xF9	; 249
 858:	b9 2e       	mov	r11, r25
 85a:	8f 36       	cpi	r24, 0x6F	; 111
 85c:	c1 f0       	breq	.+48     	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
 85e:	18 f4       	brcc	.+6      	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 860:	88 35       	cpi	r24, 0x58	; 88
 862:	79 f0       	breq	.+30     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 864:	b5 c0       	rjmp	.+362    	; 0x9d0 <__stack+0xd1>
 866:	80 37       	cpi	r24, 0x70	; 112
 868:	19 f0       	breq	.+6      	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 86a:	88 37       	cpi	r24, 0x78	; 120
 86c:	21 f0       	breq	.+8      	; 0x876 <__DATA_REGION_LENGTH__+0x76>
 86e:	b0 c0       	rjmp	.+352    	; 0x9d0 <__stack+0xd1>
 870:	e9 2f       	mov	r30, r25
 872:	e0 61       	ori	r30, 0x10	; 16
 874:	be 2e       	mov	r11, r30
 876:	b4 fe       	sbrs	r11, 4
 878:	0d c0       	rjmp	.+26     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 87a:	fb 2d       	mov	r31, r11
 87c:	f4 60       	ori	r31, 0x04	; 4
 87e:	bf 2e       	mov	r11, r31
 880:	09 c0       	rjmp	.+18     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 882:	34 fe       	sbrs	r3, 4
 884:	0a c0       	rjmp	.+20     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 886:	29 2f       	mov	r18, r25
 888:	26 60       	ori	r18, 0x06	; 6
 88a:	b2 2e       	mov	r11, r18
 88c:	06 c0       	rjmp	.+12     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 88e:	28 e0       	ldi	r18, 0x08	; 8
 890:	30 e0       	ldi	r19, 0x00	; 0
 892:	05 c0       	rjmp	.+10     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 894:	20 e1       	ldi	r18, 0x10	; 16
 896:	30 e0       	ldi	r19, 0x00	; 0
 898:	02 c0       	rjmp	.+4      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 89a:	20 e1       	ldi	r18, 0x10	; 16
 89c:	32 e0       	ldi	r19, 0x02	; 2
 89e:	f8 01       	movw	r30, r16
 8a0:	b7 fe       	sbrs	r11, 7
 8a2:	07 c0       	rjmp	.+14     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8a4:	60 81       	ld	r22, Z
 8a6:	71 81       	ldd	r23, Z+1	; 0x01
 8a8:	82 81       	ldd	r24, Z+2	; 0x02
 8aa:	93 81       	ldd	r25, Z+3	; 0x03
 8ac:	0c 5f       	subi	r16, 0xFC	; 252
 8ae:	1f 4f       	sbci	r17, 0xFF	; 255
 8b0:	06 c0       	rjmp	.+12     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8b2:	60 81       	ld	r22, Z
 8b4:	71 81       	ldd	r23, Z+1	; 0x01
 8b6:	80 e0       	ldi	r24, 0x00	; 0
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	0e 5f       	subi	r16, 0xFE	; 254
 8bc:	1f 4f       	sbci	r17, 0xFF	; 255
 8be:	a3 01       	movw	r20, r6
 8c0:	0e 94 44 05 	call	0xa88	; 0xa88 <__ultoa_invert>
 8c4:	88 2e       	mov	r8, r24
 8c6:	86 18       	sub	r8, r6
 8c8:	fb 2d       	mov	r31, r11
 8ca:	ff 77       	andi	r31, 0x7F	; 127
 8cc:	3f 2e       	mov	r3, r31
 8ce:	36 fe       	sbrs	r3, 6
 8d0:	0d c0       	rjmp	.+26     	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
 8d2:	23 2d       	mov	r18, r3
 8d4:	2e 7f       	andi	r18, 0xFE	; 254
 8d6:	a2 2e       	mov	r10, r18
 8d8:	89 14       	cp	r8, r9
 8da:	58 f4       	brcc	.+22     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
 8dc:	34 fe       	sbrs	r3, 4
 8de:	0b c0       	rjmp	.+22     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 8e0:	32 fc       	sbrc	r3, 2
 8e2:	09 c0       	rjmp	.+18     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 8e4:	83 2d       	mov	r24, r3
 8e6:	8e 7e       	andi	r24, 0xEE	; 238
 8e8:	a8 2e       	mov	r10, r24
 8ea:	05 c0       	rjmp	.+10     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 8ec:	b8 2c       	mov	r11, r8
 8ee:	a3 2c       	mov	r10, r3
 8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8f2:	b8 2c       	mov	r11, r8
 8f4:	01 c0       	rjmp	.+2      	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8f6:	b9 2c       	mov	r11, r9
 8f8:	a4 fe       	sbrs	r10, 4
 8fa:	0f c0       	rjmp	.+30     	; 0x91a <__stack+0x1b>
 8fc:	fe 01       	movw	r30, r28
 8fe:	e8 0d       	add	r30, r8
 900:	f1 1d       	adc	r31, r1
 902:	80 81       	ld	r24, Z
 904:	80 33       	cpi	r24, 0x30	; 48
 906:	21 f4       	brne	.+8      	; 0x910 <__stack+0x11>
 908:	9a 2d       	mov	r25, r10
 90a:	99 7e       	andi	r25, 0xE9	; 233
 90c:	a9 2e       	mov	r10, r25
 90e:	09 c0       	rjmp	.+18     	; 0x922 <__stack+0x23>
 910:	a2 fe       	sbrs	r10, 2
 912:	06 c0       	rjmp	.+12     	; 0x920 <__stack+0x21>
 914:	b3 94       	inc	r11
 916:	b3 94       	inc	r11
 918:	04 c0       	rjmp	.+8      	; 0x922 <__stack+0x23>
 91a:	8a 2d       	mov	r24, r10
 91c:	86 78       	andi	r24, 0x86	; 134
 91e:	09 f0       	breq	.+2      	; 0x922 <__stack+0x23>
 920:	b3 94       	inc	r11
 922:	a3 fc       	sbrc	r10, 3
 924:	11 c0       	rjmp	.+34     	; 0x948 <__stack+0x49>
 926:	a0 fe       	sbrs	r10, 0
 928:	06 c0       	rjmp	.+12     	; 0x936 <__stack+0x37>
 92a:	b2 14       	cp	r11, r2
 92c:	88 f4       	brcc	.+34     	; 0x950 <__stack+0x51>
 92e:	28 0c       	add	r2, r8
 930:	92 2c       	mov	r9, r2
 932:	9b 18       	sub	r9, r11
 934:	0e c0       	rjmp	.+28     	; 0x952 <__stack+0x53>
 936:	b2 14       	cp	r11, r2
 938:	60 f4       	brcc	.+24     	; 0x952 <__stack+0x53>
 93a:	b6 01       	movw	r22, r12
 93c:	80 e2       	ldi	r24, 0x20	; 32
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 944:	b3 94       	inc	r11
 946:	f7 cf       	rjmp	.-18     	; 0x936 <__stack+0x37>
 948:	b2 14       	cp	r11, r2
 94a:	18 f4       	brcc	.+6      	; 0x952 <__stack+0x53>
 94c:	2b 18       	sub	r2, r11
 94e:	02 c0       	rjmp	.+4      	; 0x954 <__stack+0x55>
 950:	98 2c       	mov	r9, r8
 952:	21 2c       	mov	r2, r1
 954:	a4 fe       	sbrs	r10, 4
 956:	10 c0       	rjmp	.+32     	; 0x978 <__stack+0x79>
 958:	b6 01       	movw	r22, r12
 95a:	80 e3       	ldi	r24, 0x30	; 48
 95c:	90 e0       	ldi	r25, 0x00	; 0
 95e:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 962:	a2 fe       	sbrs	r10, 2
 964:	17 c0       	rjmp	.+46     	; 0x994 <__stack+0x95>
 966:	a1 fc       	sbrc	r10, 1
 968:	03 c0       	rjmp	.+6      	; 0x970 <__stack+0x71>
 96a:	88 e7       	ldi	r24, 0x78	; 120
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	02 c0       	rjmp	.+4      	; 0x974 <__stack+0x75>
 970:	88 e5       	ldi	r24, 0x58	; 88
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	b6 01       	movw	r22, r12
 976:	0c c0       	rjmp	.+24     	; 0x990 <__stack+0x91>
 978:	8a 2d       	mov	r24, r10
 97a:	86 78       	andi	r24, 0x86	; 134
 97c:	59 f0       	breq	.+22     	; 0x994 <__stack+0x95>
 97e:	a1 fe       	sbrs	r10, 1
 980:	02 c0       	rjmp	.+4      	; 0x986 <__stack+0x87>
 982:	8b e2       	ldi	r24, 0x2B	; 43
 984:	01 c0       	rjmp	.+2      	; 0x988 <__stack+0x89>
 986:	80 e2       	ldi	r24, 0x20	; 32
 988:	a7 fc       	sbrc	r10, 7
 98a:	8d e2       	ldi	r24, 0x2D	; 45
 98c:	b6 01       	movw	r22, r12
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 994:	89 14       	cp	r8, r9
 996:	38 f4       	brcc	.+14     	; 0x9a6 <__stack+0xa7>
 998:	b6 01       	movw	r22, r12
 99a:	80 e3       	ldi	r24, 0x30	; 48
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 9a2:	9a 94       	dec	r9
 9a4:	f7 cf       	rjmp	.-18     	; 0x994 <__stack+0x95>
 9a6:	8a 94       	dec	r8
 9a8:	f3 01       	movw	r30, r6
 9aa:	e8 0d       	add	r30, r8
 9ac:	f1 1d       	adc	r31, r1
 9ae:	80 81       	ld	r24, Z
 9b0:	b6 01       	movw	r22, r12
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 9b8:	81 10       	cpse	r8, r1
 9ba:	f5 cf       	rjmp	.-22     	; 0x9a6 <__stack+0xa7>
 9bc:	22 20       	and	r2, r2
 9be:	09 f4       	brne	.+2      	; 0x9c2 <__stack+0xc3>
 9c0:	42 ce       	rjmp	.-892    	; 0x646 <vfprintf+0x24>
 9c2:	b6 01       	movw	r22, r12
 9c4:	80 e2       	ldi	r24, 0x20	; 32
 9c6:	90 e0       	ldi	r25, 0x00	; 0
 9c8:	0e 94 08 05 	call	0xa10	; 0xa10 <fputc>
 9cc:	2a 94       	dec	r2
 9ce:	f6 cf       	rjmp	.-20     	; 0x9bc <__stack+0xbd>
 9d0:	f6 01       	movw	r30, r12
 9d2:	86 81       	ldd	r24, Z+6	; 0x06
 9d4:	97 81       	ldd	r25, Z+7	; 0x07
 9d6:	02 c0       	rjmp	.+4      	; 0x9dc <__stack+0xdd>
 9d8:	8f ef       	ldi	r24, 0xFF	; 255
 9da:	9f ef       	ldi	r25, 0xFF	; 255
 9dc:	2b 96       	adiw	r28, 0x0b	; 11
 9de:	e2 e1       	ldi	r30, 0x12	; 18
 9e0:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__epilogue_restores__>

000009e4 <strnlen_P>:
 9e4:	fc 01       	movw	r30, r24
 9e6:	05 90       	lpm	r0, Z+
 9e8:	61 50       	subi	r22, 0x01	; 1
 9ea:	70 40       	sbci	r23, 0x00	; 0
 9ec:	01 10       	cpse	r0, r1
 9ee:	d8 f7       	brcc	.-10     	; 0x9e6 <strnlen_P+0x2>
 9f0:	80 95       	com	r24
 9f2:	90 95       	com	r25
 9f4:	8e 0f       	add	r24, r30
 9f6:	9f 1f       	adc	r25, r31
 9f8:	08 95       	ret

000009fa <strnlen>:
 9fa:	fc 01       	movw	r30, r24
 9fc:	61 50       	subi	r22, 0x01	; 1
 9fe:	70 40       	sbci	r23, 0x00	; 0
 a00:	01 90       	ld	r0, Z+
 a02:	01 10       	cpse	r0, r1
 a04:	d8 f7       	brcc	.-10     	; 0x9fc <strnlen+0x2>
 a06:	80 95       	com	r24
 a08:	90 95       	com	r25
 a0a:	8e 0f       	add	r24, r30
 a0c:	9f 1f       	adc	r25, r31
 a0e:	08 95       	ret

00000a10 <fputc>:
 a10:	0f 93       	push	r16
 a12:	1f 93       	push	r17
 a14:	cf 93       	push	r28
 a16:	df 93       	push	r29
 a18:	fb 01       	movw	r30, r22
 a1a:	23 81       	ldd	r18, Z+3	; 0x03
 a1c:	21 fd       	sbrc	r18, 1
 a1e:	03 c0       	rjmp	.+6      	; 0xa26 <fputc+0x16>
 a20:	8f ef       	ldi	r24, 0xFF	; 255
 a22:	9f ef       	ldi	r25, 0xFF	; 255
 a24:	2c c0       	rjmp	.+88     	; 0xa7e <fputc+0x6e>
 a26:	22 ff       	sbrs	r18, 2
 a28:	16 c0       	rjmp	.+44     	; 0xa56 <fputc+0x46>
 a2a:	46 81       	ldd	r20, Z+6	; 0x06
 a2c:	57 81       	ldd	r21, Z+7	; 0x07
 a2e:	24 81       	ldd	r18, Z+4	; 0x04
 a30:	35 81       	ldd	r19, Z+5	; 0x05
 a32:	42 17       	cp	r20, r18
 a34:	53 07       	cpc	r21, r19
 a36:	44 f4       	brge	.+16     	; 0xa48 <fputc+0x38>
 a38:	a0 81       	ld	r26, Z
 a3a:	b1 81       	ldd	r27, Z+1	; 0x01
 a3c:	9d 01       	movw	r18, r26
 a3e:	2f 5f       	subi	r18, 0xFF	; 255
 a40:	3f 4f       	sbci	r19, 0xFF	; 255
 a42:	31 83       	std	Z+1, r19	; 0x01
 a44:	20 83       	st	Z, r18
 a46:	8c 93       	st	X, r24
 a48:	26 81       	ldd	r18, Z+6	; 0x06
 a4a:	37 81       	ldd	r19, Z+7	; 0x07
 a4c:	2f 5f       	subi	r18, 0xFF	; 255
 a4e:	3f 4f       	sbci	r19, 0xFF	; 255
 a50:	37 83       	std	Z+7, r19	; 0x07
 a52:	26 83       	std	Z+6, r18	; 0x06
 a54:	14 c0       	rjmp	.+40     	; 0xa7e <fputc+0x6e>
 a56:	8b 01       	movw	r16, r22
 a58:	ec 01       	movw	r28, r24
 a5a:	fb 01       	movw	r30, r22
 a5c:	00 84       	ldd	r0, Z+8	; 0x08
 a5e:	f1 85       	ldd	r31, Z+9	; 0x09
 a60:	e0 2d       	mov	r30, r0
 a62:	09 95       	icall
 a64:	89 2b       	or	r24, r25
 a66:	e1 f6       	brne	.-72     	; 0xa20 <fputc+0x10>
 a68:	d8 01       	movw	r26, r16
 a6a:	16 96       	adiw	r26, 0x06	; 6
 a6c:	8d 91       	ld	r24, X+
 a6e:	9c 91       	ld	r25, X
 a70:	17 97       	sbiw	r26, 0x07	; 7
 a72:	01 96       	adiw	r24, 0x01	; 1
 a74:	17 96       	adiw	r26, 0x07	; 7
 a76:	9c 93       	st	X, r25
 a78:	8e 93       	st	-X, r24
 a7a:	16 97       	sbiw	r26, 0x06	; 6
 a7c:	ce 01       	movw	r24, r28
 a7e:	df 91       	pop	r29
 a80:	cf 91       	pop	r28
 a82:	1f 91       	pop	r17
 a84:	0f 91       	pop	r16
 a86:	08 95       	ret

00000a88 <__ultoa_invert>:
 a88:	fa 01       	movw	r30, r20
 a8a:	aa 27       	eor	r26, r26
 a8c:	28 30       	cpi	r18, 0x08	; 8
 a8e:	51 f1       	breq	.+84     	; 0xae4 <__ultoa_invert+0x5c>
 a90:	20 31       	cpi	r18, 0x10	; 16
 a92:	81 f1       	breq	.+96     	; 0xaf4 <__ultoa_invert+0x6c>
 a94:	e8 94       	clt
 a96:	6f 93       	push	r22
 a98:	6e 7f       	andi	r22, 0xFE	; 254
 a9a:	6e 5f       	subi	r22, 0xFE	; 254
 a9c:	7f 4f       	sbci	r23, 0xFF	; 255
 a9e:	8f 4f       	sbci	r24, 0xFF	; 255
 aa0:	9f 4f       	sbci	r25, 0xFF	; 255
 aa2:	af 4f       	sbci	r26, 0xFF	; 255
 aa4:	b1 e0       	ldi	r27, 0x01	; 1
 aa6:	3e d0       	rcall	.+124    	; 0xb24 <__ultoa_invert+0x9c>
 aa8:	b4 e0       	ldi	r27, 0x04	; 4
 aaa:	3c d0       	rcall	.+120    	; 0xb24 <__ultoa_invert+0x9c>
 aac:	67 0f       	add	r22, r23
 aae:	78 1f       	adc	r23, r24
 ab0:	89 1f       	adc	r24, r25
 ab2:	9a 1f       	adc	r25, r26
 ab4:	a1 1d       	adc	r26, r1
 ab6:	68 0f       	add	r22, r24
 ab8:	79 1f       	adc	r23, r25
 aba:	8a 1f       	adc	r24, r26
 abc:	91 1d       	adc	r25, r1
 abe:	a1 1d       	adc	r26, r1
 ac0:	6a 0f       	add	r22, r26
 ac2:	71 1d       	adc	r23, r1
 ac4:	81 1d       	adc	r24, r1
 ac6:	91 1d       	adc	r25, r1
 ac8:	a1 1d       	adc	r26, r1
 aca:	20 d0       	rcall	.+64     	; 0xb0c <__ultoa_invert+0x84>
 acc:	09 f4       	brne	.+2      	; 0xad0 <__ultoa_invert+0x48>
 ace:	68 94       	set
 ad0:	3f 91       	pop	r19
 ad2:	2a e0       	ldi	r18, 0x0A	; 10
 ad4:	26 9f       	mul	r18, r22
 ad6:	11 24       	eor	r1, r1
 ad8:	30 19       	sub	r19, r0
 ada:	30 5d       	subi	r19, 0xD0	; 208
 adc:	31 93       	st	Z+, r19
 ade:	de f6       	brtc	.-74     	; 0xa96 <__ultoa_invert+0xe>
 ae0:	cf 01       	movw	r24, r30
 ae2:	08 95       	ret
 ae4:	46 2f       	mov	r20, r22
 ae6:	47 70       	andi	r20, 0x07	; 7
 ae8:	40 5d       	subi	r20, 0xD0	; 208
 aea:	41 93       	st	Z+, r20
 aec:	b3 e0       	ldi	r27, 0x03	; 3
 aee:	0f d0       	rcall	.+30     	; 0xb0e <__ultoa_invert+0x86>
 af0:	c9 f7       	brne	.-14     	; 0xae4 <__ultoa_invert+0x5c>
 af2:	f6 cf       	rjmp	.-20     	; 0xae0 <__ultoa_invert+0x58>
 af4:	46 2f       	mov	r20, r22
 af6:	4f 70       	andi	r20, 0x0F	; 15
 af8:	40 5d       	subi	r20, 0xD0	; 208
 afa:	4a 33       	cpi	r20, 0x3A	; 58
 afc:	18 f0       	brcs	.+6      	; 0xb04 <__ultoa_invert+0x7c>
 afe:	49 5d       	subi	r20, 0xD9	; 217
 b00:	31 fd       	sbrc	r19, 1
 b02:	40 52       	subi	r20, 0x20	; 32
 b04:	41 93       	st	Z+, r20
 b06:	02 d0       	rcall	.+4      	; 0xb0c <__ultoa_invert+0x84>
 b08:	a9 f7       	brne	.-22     	; 0xaf4 <__ultoa_invert+0x6c>
 b0a:	ea cf       	rjmp	.-44     	; 0xae0 <__ultoa_invert+0x58>
 b0c:	b4 e0       	ldi	r27, 0x04	; 4
 b0e:	a6 95       	lsr	r26
 b10:	97 95       	ror	r25
 b12:	87 95       	ror	r24
 b14:	77 95       	ror	r23
 b16:	67 95       	ror	r22
 b18:	ba 95       	dec	r27
 b1a:	c9 f7       	brne	.-14     	; 0xb0e <__ultoa_invert+0x86>
 b1c:	00 97       	sbiw	r24, 0x00	; 0
 b1e:	61 05       	cpc	r22, r1
 b20:	71 05       	cpc	r23, r1
 b22:	08 95       	ret
 b24:	9b 01       	movw	r18, r22
 b26:	ac 01       	movw	r20, r24
 b28:	0a 2e       	mov	r0, r26
 b2a:	06 94       	lsr	r0
 b2c:	57 95       	ror	r21
 b2e:	47 95       	ror	r20
 b30:	37 95       	ror	r19
 b32:	27 95       	ror	r18
 b34:	ba 95       	dec	r27
 b36:	c9 f7       	brne	.-14     	; 0xb2a <__ultoa_invert+0xa2>
 b38:	62 0f       	add	r22, r18
 b3a:	73 1f       	adc	r23, r19
 b3c:	84 1f       	adc	r24, r20
 b3e:	95 1f       	adc	r25, r21
 b40:	a0 1d       	adc	r26, r0
 b42:	08 95       	ret

00000b44 <__prologue_saves__>:
 b44:	2f 92       	push	r2
 b46:	3f 92       	push	r3
 b48:	4f 92       	push	r4
 b4a:	5f 92       	push	r5
 b4c:	6f 92       	push	r6
 b4e:	7f 92       	push	r7
 b50:	8f 92       	push	r8
 b52:	9f 92       	push	r9
 b54:	af 92       	push	r10
 b56:	bf 92       	push	r11
 b58:	cf 92       	push	r12
 b5a:	df 92       	push	r13
 b5c:	ef 92       	push	r14
 b5e:	ff 92       	push	r15
 b60:	0f 93       	push	r16
 b62:	1f 93       	push	r17
 b64:	cf 93       	push	r28
 b66:	df 93       	push	r29
 b68:	cd b7       	in	r28, 0x3d	; 61
 b6a:	de b7       	in	r29, 0x3e	; 62
 b6c:	ca 1b       	sub	r28, r26
 b6e:	db 0b       	sbc	r29, r27
 b70:	0f b6       	in	r0, 0x3f	; 63
 b72:	f8 94       	cli
 b74:	de bf       	out	0x3e, r29	; 62
 b76:	0f be       	out	0x3f, r0	; 63
 b78:	cd bf       	out	0x3d, r28	; 61
 b7a:	09 94       	ijmp

00000b7c <__epilogue_restores__>:
 b7c:	2a 88       	ldd	r2, Y+18	; 0x12
 b7e:	39 88       	ldd	r3, Y+17	; 0x11
 b80:	48 88       	ldd	r4, Y+16	; 0x10
 b82:	5f 84       	ldd	r5, Y+15	; 0x0f
 b84:	6e 84       	ldd	r6, Y+14	; 0x0e
 b86:	7d 84       	ldd	r7, Y+13	; 0x0d
 b88:	8c 84       	ldd	r8, Y+12	; 0x0c
 b8a:	9b 84       	ldd	r9, Y+11	; 0x0b
 b8c:	aa 84       	ldd	r10, Y+10	; 0x0a
 b8e:	b9 84       	ldd	r11, Y+9	; 0x09
 b90:	c8 84       	ldd	r12, Y+8	; 0x08
 b92:	df 80       	ldd	r13, Y+7	; 0x07
 b94:	ee 80       	ldd	r14, Y+6	; 0x06
 b96:	fd 80       	ldd	r15, Y+5	; 0x05
 b98:	0c 81       	ldd	r16, Y+4	; 0x04
 b9a:	1b 81       	ldd	r17, Y+3	; 0x03
 b9c:	aa 81       	ldd	r26, Y+2	; 0x02
 b9e:	b9 81       	ldd	r27, Y+1	; 0x01
 ba0:	ce 0f       	add	r28, r30
 ba2:	d1 1d       	adc	r29, r1
 ba4:	0f b6       	in	r0, 0x3f	; 63
 ba6:	f8 94       	cli
 ba8:	de bf       	out	0x3e, r29	; 62
 baa:	0f be       	out	0x3f, r0	; 63
 bac:	cd bf       	out	0x3d, r28	; 61
 bae:	ed 01       	movw	r28, r26
 bb0:	08 95       	ret

00000bb2 <_exit>:
 bb2:	f8 94       	cli

00000bb4 <__stop_program>:
 bb4:	ff cf       	rjmp	.-2      	; 0xbb4 <__stop_program>
